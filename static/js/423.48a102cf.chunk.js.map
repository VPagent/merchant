{"version":3,"file":"static/js/423.48a102cf.chunk.js","mappings":"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","sources":["webpack://merchant/./src/components/Modal/modal.module.scss?2290","components/Modal/Modal.tsx","webpack://merchant/./src/components/ResponseReceived/responseReceived.module.scss?12f8","components/ResponseReceived/ResponseReceived.tsx","webpack://merchant/./src/components/DontUseBox/dontUseBox.module.scss?8dec","components/DontUseBox/DontUseBox.tsx","webpack://merchant/./src/components/StorePageText/storePageText.module.scss?82d8","webpack://merchant/./src/components/StoreConnected/storeConnected.module.scss?7618","components/StoreConnected/StoreConnected.tsx","components/StorePageText/StorePageText.tsx","pages/ConnectStorePage/ConnectStorePage.tsx","services/API.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"modal_modal__e093m\"};","import { ReactNode } from 'react'\nimport { createPortal } from 'react-dom'\nimport Container from '../Container'\nimport s from './modal.module.scss'\n\ntype Props = {\n    children: ReactNode\n}\n\n// const portal = document.getElementById('portal')!\n\n\nconst Modal:React.FC<Props> = ({children}) => {\n\n    return(\n\n        // <div className={s.backDrop}>\n       \n            <div className={s.modal}>\n                {children}\n            </div>\n        // </div>      \n    )\n}\n\n\nexport default Modal","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"responseReceived_wrapper__6WNRS\",\"icon\":\"responseReceived_icon__SRxnM\",\"title\":\"responseReceived_title__lkO4V\",\"text\":\"responseReceived_text__+mFAT\",\"btn\":\"responseReceived_btn__-kyFl\"};","import s from './responseReceived.module.scss'\nimport Button from 'react-bootstrap/Button';\nimport {BsFillCheckCircleFill} from 'react-icons/bs';\nimport Modal from '../Modal';\n\ntype Props = {\n    onClose: Function,\n    text: string\n}\n\nconst ResponseReceived:React.FC<Props> = ({onClose, text}) => {\n\n    \n    return(\n        <Modal>\n            <div className={s.wrapper}>\n                <BsFillCheckCircleFill size={80} className={s.icon}/>\n                <h2 className={s.title}>Response received</h2>\n                <p className={s.text}>\n                    Thank you for your interest in Chad!\n                    We’ll be hard at work building integrations\n                    to support your {text}.\n                </p>\n                <Button variant=\"primary\" className={s.btn} onClick={() => onClose()}>Done</Button>\n            </div>\n        </Modal>\n    )\n}\n\nexport default ResponseReceived","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"dontUseBox_title__mAcgp\",\"form\":\"dontUseBox_form__gy3qr\",\"form_label\":\"dontUseBox_form_label__rvFUw\",\"form_input\":\"dontUseBox_form_input__cjz32\",\"form_btn\":\"dontUseBox_form_btn__c0mYh\",\"form_text\":\"dontUseBox_form_text__wrlqr\",\"form_span\":\"dontUseBox_form_span__tvbLU\"};","import Form from 'react-bootstrap/Form';\nimport s from './dontUseBox.module.scss';\nimport Button from 'react-bootstrap/Button';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport ResponseReceived from '../ResponseReceived';\nimport { toast } from 'react-toastify';\n\ntype Props = {\n    toOpen: Function\n}\n\n\nconst DontUseBox:React.FC<Props> = ({toOpen}) => {\n\n    const [value, setValue] = useState('')\n    const [isModalOpen, setIsModalOpen] = useState(false)\n\n    const handleOpenModal = () => {\n        setIsModalOpen(prev => !prev)\n    }\n    \n    const onFormSubmit = (e:FormEvent) => {\n        e.preventDefault()\n        if(value === (\"other\" || \"Select platform\")){\n            return toast.warning(\"You must to choose between platforms\")\n        }\n        setIsModalOpen(prev => !prev)\n        toast.warning(\"Chad Beta is currently only available on Shopify.\")\n    }\n    \n    const handleChangeSelect = (e:ChangeEvent<HTMLSelectElement>) => {\n        setValue(e.target.value)\n    } \n\n    return(\n        <>\n        {isModalOpen ? <ResponseReceived onClose={handleOpenModal} text={\"platform\"}/>\n        :<> <h1 className={s.title}>Don’t use Shopify?</h1>\n        <p className={s.text}>\n            Chad Beta is currently only available on Shopify.\n            We’ll send you an email when Chad becomes available on your platform.\n        </p>\n        <Form onSubmit={onFormSubmit} className={s.form}>\n        <Form.Group>\n            <Form.Label className={s.form_label}>Platform</Form.Label>\n            <Form.Select onChange={handleChangeSelect} className={s.form_input}>\n                <option value=\"other\" defaultValue={\"Select platform\"} hidden>Select platform</option>\n                <option value=\"salesforse\">Salesforse</option>\n                <option value=\"ecwid\">Ecwid</option>\n                <option value=\"other\">Other</option>\n            </Form.Select>\n        </Form.Group>\n        <Button variant=\"primary\" type='submit' className={s.form_btn}>Submit</Button>\n        <p className={s.form_text}>Actualy use Shopify? <span className={s.form_span} onClick={() => toOpen()}>Connect</span></p>\n      </Form></>}\n        </>\n    )\n}\n\n\nexport default DontUseBox","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"storePageText_title__8KrVL\",\"list\":\"storePageText_list__Fr1dp\",\"list_item\":\"storePageText_list_item__JEqC7\",\"list_icon\":\"storePageText_list_icon__9wObD\",\"list_title\":\"storePageText_list_title__Meume\",\"list_text\":\"storePageText_list_text__1MhnT\",\"controls\":\"storePageText_controls__ozuW+\",\"controls_btn\":\"storePageText_controls_btn__Yh2kD\",\"controls_linkBtn\":\"storePageText_controls_linkBtn__x0Jq7\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"storeConnected_wrapper__ncTBc\",\"image_wrapper\":\"storeConnected_image_wrapper__T4ND3\",\"image\":\"storeConnected_image__fHjpN\",\"image_icon\":\"storeConnected_image_icon__lKIDX\",\"title\":\"storeConnected_title__uGYs-\",\"text\":\"storeConnected_text__p0UUe\",\"btn\":\"storeConnected_btn__LD7b7\",\"linkBtn\":\"storeConnected_linkBtn__w-Pgg\",\"spanBtn\":\"storeConnected_spanBtn__OB0sm\"};","import s from './storeConnected.module.scss'\nimport { useState } from \"react\"\nimport Button from 'react-bootstrap/Button';\nimport { useGlobalState } from '../../globalState/store';\nimport {useNavigate} from 'react-router-dom';\nimport {BsFillCheckCircleFill} from 'react-icons/bs';\nimport Modal from '../Modal';\n\ntype Props = {\n    toOpenAnother: Function\n}\n\nconst StoreConnected:React.FC<Props> = ({toOpenAnother}) => {\n\n    const [isContinue, setIsContinue] = useState(false)\n    const [shopResponse] = useGlobalState('shopResponse')\n    const [step, setStep] = useGlobalState('step')\n    const navigate = useNavigate()\n    \n    const handleClickContinue = () => {\n        if(isContinue){\n            setStep(3)\n            navigate('/connectGoogle')\n        }\n        setIsContinue(true)\n\n    }\n\n    return shopResponse && (\n        <Modal>\n            <div className={s.wrapper}>\n                <div className={s.image_wrapper}>\n                    <img src={shopResponse.shop_logo_url} alt=\"img\" className={s.image}/>\n                    <BsFillCheckCircleFill  className={s.image_icon} size={24}/>\n                </div>\n                <h2 className={s.title}>{!isContinue ? \"Store Connected\": `${shopResponse.shop_name} already connected`}</h2>\n                {!isContinue && <p className={s.text}>\n                    Chad is now able to manage customer support requests for {shopResponse.shop_name}.\n                </p>}\n                <Button variant=\"primary\" className={s.btn} onClick={handleClickContinue}>Continue</Button>\n                <p className={s.linkBtn}>Wrong store? <span className={s.spanBtn} onClick={() => toOpenAnother()}>Connect another one</span></p>\n            </div>\n        </Modal>\n    )\n}\n\n\nexport default StoreConnected","import s from './storePageText.module.scss'\nimport Button from 'react-bootstrap/Button';\nimport {BsCheckLg} from 'react-icons/bs';\nimport { useGlobalState } from '../../globalState/store';\nimport { getShopify } from '../../services/API';\nimport { useState } from 'react';\nimport StoreConnected from '../StoreConnected';\nimport { toast } from 'react-toastify';\n\ntype Props = {\n    toOpen: Function,\n}\n\nconst StorePageText:React.FC<Props> = ({toOpen}) => {\n    const [name] = useGlobalState('name')\n    const [shopResponse, setShopResponse] = useGlobalState('shopResponse')\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    \n    const handleConnectStore = () => {\n        getShopify(name)\n        .then(res => {\n            setShopResponse(res)\n        })\n        .catch((error:any) => toast.dark(error.message))\n        .finally(() => {\n            setIsModalOpen(prev => !prev)\n            toast.success('Store has been connected')\n        })\n    }\n\n    return(\n        <>\n        {isModalOpen ? <StoreConnected toOpenAnother={toOpen}/> \n            : <><h1 className={s.title}>Connect to Shopify Store</h1>\n            <p className={s.text}>Installs the Chad widget in your Shopify store and sets it up to display\n                your customer’s order information and self-serve options.\n            </p>\n            <ul className={s.list}>\n                <li className={s.list_item}>\n                    <span><BsCheckLg className={s.list_icon} size={12}/></span>\n                    <h2 className={s.list_title}>\n                        Track orders and shipping\n                    </h2>\n                    <p className={s.list_text}>\n                        Global coverage with 600+ couriers supported\n                    </p>\n                </li>\n                <li className={s.list_item}>\n                    <span><BsCheckLg className={s.list_icon} size={12}/></span>\n                    <h2 className={s.list_title}>\n                        Manage orders\n                    </h2>\n                    <p className={s.list_text}>\n                        Allow customers to track, return, exchange, \n                        or report problems with their orders\n                    </p>\n                </li>\n                <li className={s.list_item}>\n                    <span><BsCheckLg className={s.list_icon} size={12}/></span>\n                    <h2 className={s.list_title}>\n                        Process returns and exchanges\n                    </h2>\n                    <p className={s.list_text}>\n                        Automatically checks your store policy and existing inventory \n                        before resolving or escalating each request\n                    </p>\n                </li>\n            </ul>\n            <div className={s.controls}>\n                <Button variant=\"primary\" className={s.controls_btn} onClick={handleConnectStore}>Connect store</Button>\n                <button className={s.controls_linkBtn} onClick={() => toOpen()}>I don’t use Shopify</button>\n            </div>\n            </>}\n        </>        \n    )\n}\n\n\nexport default StorePageText","import { useEffect, useState } from \"react\"\nimport Container from \"../../components/Container\"\nimport DontUseBox from \"../../components/DontUseBox\"\nimport StorePageText from \"../../components/StorePageText\"\nimport { useGlobalState } from \"../../globalState/store\"\n\n\n\nconst ConnectStorePage:React.FC = () => {\n\n    const [useShopify, setUseShopify] = useState(true)\n    const [email] = useGlobalState('email')\n    const [step, setStep] = useGlobalState('step')\n\n    useEffect(() => {\n        if(!email){\n            setStep(1)\n        }\n    }, [email])\n    \n    const handleOpenUtilities = () => {\n        setUseShopify(prev => !prev)\n    }\n    return(\n        <>\n            {useShopify ? <StorePageText  toOpen={handleOpenUtilities}/>\n             : <DontUseBox toOpen={handleOpenUtilities}/>}\n        </>\n    )\n}\n\nexport default ConnectStorePage","import  axios  from \"axios\";\nimport { GoogleRes, RegBody, RegResponse, Shopify } from \"../types/types\";\n\n\nexport const getShopify = async (name:string):Promise<Shopify> => {\n    const URL = `https://vast-basin-98801.herokuapp.com/shopify?name=${name}`\n    const response = await axios.get(URL)\n    return response.data\n}\n\nexport const getGoogle = async ():Promise<GoogleRes> => {\n    const URL = \"https://vast-basin-98801.herokuapp.com/google\"\n    const response = await axios.get(URL)\n    return response.data\n}\n\nexport const register = async (body:RegBody):Promise<RegResponse> => {\n    const URL = \"https://vast-basin-98801.herokuapp.com/register\"\n    const response = await axios.post(URL, body)\n    return response.data\n}\n\n\n\n\n\n\n\n"],"names":["children","className","s","onClose","text","Modal","size","Button","variant","onClick","toOpen","useState","value","setValue","isModalOpen","setIsModalOpen","ResponseReceived","prev","Form","onSubmit","e","preventDefault","toast","onChange","target","defaultValue","hidden","type","toOpenAnother","isContinue","setIsContinue","useGlobalState","shopResponse","setStep","navigate","useNavigate","src","shop_logo_url","alt","shop_name","name","setShopResponse","getShopify","then","res","catch","error","message","finally","useShopify","setUseShopify","email","useEffect","handleOpenUtilities","URL","axios","response","data","getGoogle","register","body"],"sourceRoot":""}