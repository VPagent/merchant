{"version":3,"file":"static/js/834.bd8d96b4.chunk.js","mappings":"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","sources":["webpack://merchant/./src/pages/RegisterPage/registerPage.module.scss?6e71","webpack://merchant/./src/components/RegisterForm/registerForm.module.scss?85e2","components/RegisterForm/RegisterForm.tsx","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"registerPage_title__wG1L9\"};","// extracted by mini-css-extract-plugin\nexport default {\"form_group\":\"registerForm_form_group__hP7ta\",\"iconWrapper\":\"registerForm_iconWrapper__yYGiJ\",\"form_label\":\"registerForm_form_label__kT7ll\",\"form_input\":\"registerForm_form_input__mmXJ0\",\"form_createBtn\":\"registerForm_form_createBtn__u44Fi\",\"text\":\"registerForm_text__KtRmK\",\"text_link\":\"registerForm_text_link__aok31\"};","import s from '../RegisterForm/registerForm.module.scss';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link, useNavigate} from 'react-router-dom';\nimport { ChangeEvent, FormEvent, useEffect, useState } from 'react';\nimport { useGlobalState } from '../../globalState/store';\nimport {BiHide, BiShow} from 'react-icons/bi'\n\ntype Props = {\n    onFormSubmit: Function\n}\n\nconst RegisterForm:React.FC<Props> = ({onFormSubmit}) => {\n    const [email, setEmail] = useState('')\n    const [name, setName] = useState('')\n    const [password, setPassword] = useState('')\n    const [step, setStep] = useGlobalState('step')\n    const [regEmail] = useGlobalState('email')\n    const [regName] = useGlobalState('name')\n    const [regPassword] = useGlobalState('password')\n    const [shown, setShown] = useState(true)\n\n    const navigate = useNavigate()\n    useEffect(() => {\n        if(regEmail){\n            setEmail(regEmail)\n            setName(regName)\n            setPassword(regPassword)\n        }\n    }, [regEmail, regName, regPassword])\n\n    const handleChangeInput = (e:ChangeEvent<HTMLInputElement>) => {\n        switch(e.target.name){\n            case \"email\":\n                return setEmail(e.target.value);\n            case \"name\":\n                return setName(e.target.value);\n            case \"password\":\n                return setPassword(e.target.value);\n            default: console.log(\"error in switch\")\n        }\n    }\n    const handleFormSubmit = (e:FormEvent) => {\n        e.preventDefault()\n        if(!email || !name || !password){\n            return alert(\"All fields must be filled\")\n        }\n        onFormSubmit(email, name, password)\n        setStep(2)\n        navigate(\"/connectStore\")\n    }\n\n    return(\n        <>\n        <Form className={s.form} onSubmit={handleFormSubmit}>\n            <Form.Group className={s.form_group} controlId=\"formBasicEmail\">\n                <Form.Label className={s.form_label}>Email</Form.Label>\n                <Form.Control \n                    type=\"email\" \n                    name=\"email\"\n                    className={s.form_input} \n                    placeholder=\"megachad@trychad.com\" \n                    onChange={handleChangeInput}\n                    value={email}\n                />\n            </Form.Group>\n      <Form.Group className={s.form_group} controlId=\"formBasicText\">\n        <Form.Label className={s.form_label}>Your name</Form.Label>\n        <Form.Control \n            type=\"text\" \n            name=\"name\" \n            className={s.form_input} \n            placeholder=\"Mega Chad\"\n            onChange={handleChangeInput}\n            value={name}\n        />\n      </Form.Group>\n      <Form.Group className={s.form_group} controlId=\"formBasicPassword\">\n        <Form.Label className={s.form_label}>Password</Form.Label>\n        <Form.Control \n            type={shown ? 'password' : 'text' } \n            name=\"password\" \n            className={s.form_input} \n            placeholder=\"Enter password\"\n            onChange={handleChangeInput}\n            value={password} \n        />\n        <span  className={s.iconWrapper}onClick={() => setShown(prev => !prev)}>\n            {shown ?\n             <BiHide size={16}/>\n             : <BiShow size={16}/>}\n        </span>\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" className={s.form_createBtn}>\n        Create account\n      </Button>\n    </Form>\n    <p className={s.text}>Already have an account? <Link to='/login' className={s.text_link}>Login</Link></p>\n      </>\n    )\n}\n\n\nexport default RegisterForm","import s from './registerPage.module.scss'\nimport RegisterForm from \"../../components/RegisterForm\"\nimport { useGlobalState } from \"../../globalState/store\"\nimport { useEffect } from 'react'\n\n\nconst RegisterPage:React.FC = () => {\n\n    const [email, setEmail] = useGlobalState(\"email\")\n    const [name, setName] = useGlobalState(\"name\")\n    const [password, setPassword] = useGlobalState(\"password\")\n    const [welcome, setWelcome] = useGlobalState(\"welcome\")\n    const [step, setStep] = useGlobalState('step')\n\n    useEffect(()=>{\n        setStep(1)\n        if(welcome){\n            setWelcome(null)\n        }\n    }, [welcome, setStep])\n    \n    const formSubmit = ( email:string, name:string, password:string) => {\n        setEmail(email)\n        setName(name)\n        setPassword(password)\n    }\n\n    return(\n            <>\n            <h1 className={s.title}>Welcome to Chad</h1>\n            <p className={s.text}>Go live in 10 minutes! Our self-service widget empowers your customers to manage orders and track shipments 24/7 without driving you crazy.</p>\n            <RegisterForm onFormSubmit={formSubmit} />\n            </>\n    )\n}\n\nexport default RegisterPage"],"names":["onFormSubmit","useState","email","setEmail","name","setName","password","setPassword","useGlobalState","setStep","regEmail","regName","regPassword","shown","setShown","navigate","useNavigate","useEffect","handleChangeInput","e","target","value","console","log","Form","className","s","onSubmit","preventDefault","alert","controlId","type","placeholder","onChange","onClick","prev","size","Button","variant","to","welcome","setWelcome"],"sourceRoot":""}